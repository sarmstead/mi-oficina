version: 2.1
jobs:
  preview_build:
    docker:
      - image: cimg/node:20.10.0
    steps:
      - checkout
      - run:
          name: Install Vercel CLI
          command: sudo npm install --global vercel@latest
      - run:
          name: Pull Vercel Environment Information
          command: vercel pull --yes --environment=preview --token="$VERCEL_TOKEN"
      - run:
          name: Build Project Artifacts
          command: vercel build --token="$VERCEL_TOKEN"

  preview_deploy:
    docker:
      - image: cimg/node:20.10.0
    steps:
      - checkout
      - run:
          name: Deploy Project Artifacts to Vercel
          command: vercel deploy --prebuilt --token="$VERCEL_TOKEN"

  production_build:
    docker:
      - image: cimg/node:20.10.0
    steps:
      - checkout
      - run:
          name: Install Vercel CLI
          command: npm install --global vercel@latest
      - run:
          name: Pull Vercel Environment Information
          command: vercel pull --yes --environment=production --token=$VERCEL_TOKEN
      - run:
          name: Build Project Artifacts
          command: vercel build --prod --token=$VERCEL_TOKEN

  production_deploy:
    docker:
      - image: cimg/node:20.10.0
    steps:
      - checkout
      - run:
          name: Deploy Project Artifacts to Vercel
          command: vercel deploy --prebuilt --prod --token=$VERCEL_TOKEN

  test:
    docker:
      - image: cimg/node:20.10.0
    steps:
      - checkout
      - run:
          name: Check formatting
          command: npx prettier . --check
      # TODO: Add test suite
      # run:
      #   name: Run tests
      #   command: yarn test

workflows:
  preview:
    when:
      matches: { pattern: "((?!main).)*", value: << pipeline.git.branch >> }
    jobs:
      - preview_build
      - test:
          requires:
            - preview_build
      - preview_deploy:
          requires:
            - test
  # production:
  #   when:
  #     and:
  #       - equal: [main, << pipeline.git.branch >>]
  #   jobs:
  #     - production_build
  #     - test:
  #         requires:
  #           - production_build
  #     - production_deploy:
  #         requires:
  #           - test
